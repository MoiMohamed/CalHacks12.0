# -------------------------------
# BASE BUILD
# -------------------------------
FROM python:3.11-slim AS base

WORKDIR /home/myapp/backend

# set env variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install postgres connector dependencies
RUN apt update && apt install --no-install-recommends libpq5 -y

RUN mkdir -p /home/myapp/backend

# Temporarily use uv command from remote image to install dependencies
# Mount the lock and pyproject.toml to speed up image build time if these files are not changed
RUN --mount=from=ghcr.io/astral-sh/uv,source=/uv,target=/bin/uv \
    --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=backend/uv.lock,target=uv.lock \
    --mount=type=bind,source=backend/pyproject.toml,target=pyproject.toml \
    uv sync --no-dev --frozen --no-install-project

ENV PATH="/home/myapp/backend/.venv/bin:$PATH"

# Copy in backend files
COPY backend/app ./app
COPY backend/alembic ./alembic
COPY backend/alembic.ini .

# -------------------------------
# DEV BUILD - JUST BACKEND
# -------------------------------
FROM base AS dev

WORKDIR /home/myapp/backend

# Create empty assets folder
RUN mkdir -p /home/myapp/backend/assets

CMD ["fastapi", "dev", "app/main.py", "--host", "0.0.0.0"]